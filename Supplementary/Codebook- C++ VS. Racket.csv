Category,Tag,Description,Example
Learning Experience,Learning Experience-C++ is good,Students think the learning experience of C++ was good,I thought it was good. It's been a while since I was in a class of C++. But it comes back pretty easily.
,Learning Experience-C++ is strugling,Students think the learning experience of C++ was strugling,"But otherwise, C++ was a nightmare from a long time ago, so I can't remember too much."
,Learning Experience-racket is strugling,Students think the learning experience of Racket was strugling,"Racket, definitely also very difficult. There's a lot of components to write."
,Learning Experience-racket is good,Students think the learning experience of racket is good,"You know, so I mean, I mean, like, it's, it's been fine. I think that doing assignments in Racket, were actually kind of fun."
Language Challenges,Language Challenges-parentheses of Racket,Students think the parentheses in racket make it harder to learn,I don't like the parenthesis. Too many parentheses.
,Language Challenges-syntax of Racket,Students think the syntax of racket makes it harder to learn,Racket syntax is kind of confusing. A specific part of Racket that I'd say I was not very comfortable would be like conditional statements.
,Language Challenges-pointers and memory in C++,Students think the pointers and memory allocation in C++ is difficult to learn,"I think memory management was tricky. And like pointers, like the fact that it can dereference but also be memory addressing and all that kind of stuff."
,Language Challenges-syntax of C++,Students think the syntax of C++ makes it harder to learn,"Like a lot of like brackets and parenthesis. Because maybe it's like the same similar to Java, but like for Python user, just feel like it's too much."
,Language Challenges-Debugging of C++,Students think the debugging of C++ is the most difficult part,"But when it's implemented, like when debugging, I tend to get stuck. Okay. So I think that's the hardest part of me learning that language."
,Language Challenges-lambda and thunk,Students think the lambda and thunk of Racket is difficult for them to learn,"I think racket, when it gets the high level stuff, gets kind of confusing with all of the lambdas"
,Language Challenges-Recursion part of Racket,Students think the recursion part of Racket is extremely difficult for them to learn,"I think the recursion aspect was just  the most difficult just having to do everything in recursion, rather than making like a for loop or a while loop."
,Language Challenges-Shift from imperative language to Racket,Students think the Shift from imperative language to Racket makes it harder to learn,I guess it's just changing the way you think about programming thinking in a different way. That's the most challenging part
,Language Challenges-Inheritance,Students think the inheritance of C++ makes it harder to learn,I would say inheritance with challenging for me to understand.
,Language Challenges-C++ Containers,Students think the learning containers with C++ make them feel C++ is difficult to learn,"challenges that faced learning C++ would be some of the, the functions. we kind of learned about by giving an example of a stack, or no, let's use a queue, like there is like the push, pop on the push function."
,Language Challenges-streams and thunks of Racket,Students think the streams and thunks of racket makes it harder to learn,But I think sometimes I still struggle with like streams and thunks and stuff.
Learning Resources,Learning Resources-lectures and slides for C++,Students uses lectures and slides to learn C++,"in class and following the lectures in 2201, CS 22"
,Learning Resources-lectures and slides for Racket,Students uses lectures and slides to learn racket,I think lectures have helped a lot more for racket
,Learning Resources-other sources for C++,"Students use other recourse to learn C++ like online tutorials, official website, etc.","Obviously, some of the limitations on my knowledge meant that I signed up for online courses. Course Hero, Coursera, all of them have good demos."
,Learning Resources-other sources for Racket,"Students use other recourse to learn Racket like online tutorials, official website, etc.",Read some other universities like slides and presentations and stuff.
Language Preference,Language Preference-Prefer C++,Students prefer C++ than Racket,"C++ is like, my more performance, like I need speed, or I need a specific thing, or sometimes for object oriented C++ is a little bit easier as well."
,Language Preference-Prefer Racket,Students prefer Racket than C++,But I feel like writing the Racket was more much more straightforward because I don't need to include all the types that are required for C++.
Future Use,Future use-C++,Students will continue to use C++,"Yeah, probably.  Because I think a lot of industries are using it, or like companies or you're going to use C++."
,Future use-Racket ,Students will continue to use Racket ,I'll like try to because I think it's like pretty interesting.
Perspective,Perspective-useful/helpful for C++,Students think C++ is useful while racket is not,"I don't think it's as updated and, you know, useful as c plus pluses."
,Perspective-don't understand why learn Racket,Students don't understand why they should learn Racket,I understand why it might be good to do it. But I don't understand the exact philosophy of why we're doing it.
,Perspective-Racket is easier to debug,Students think Racket is easier to debug,"some of the C++ like, assignments, I'll like, have no idea where I messed up. But racket is like, okay, it's one of these three lines."
,Perspective-C++ the way of writing and reading,Students thinks they are easier to follow the way of writting and reading in C++,I prefer C++.  I think it's just like more chronological. And so it makes more sense in like the flow of the way I write and read.
,Perspective-Racket easier to solve recursion,Students think Racket is easier for them to solve recursion questions,"I guess, because you can use to recursion, it's kind of easier to do recursive questions, just because you don't have to wait for the result of the previous and then the previous and the previous."
,Perspective-Like Functional not like Racket,Students think they like functional programming language but they don't like Racket,"I'm not the biggest fan of Racket, but I still like functional programming. I think it's pretty cool. But I don't like like Racket"
,Perspective-Racket outdated,Students think Racket is outdated,"I think racket is kind of outdated language because there's a, like list processing language, and it based everything on recursion, which can be kind of confusing sometimes."
,Perspective-learn C++ first than Racket,Students prefer C++ because they learnt C++ first than Racket,"As it's an imperative language, I guess I, but also, maybe that's biased because I learned C++ first."
,Perspective-Other Language better than C++ or Racket,Students prefer other languages than C++ and racket so they will not use them in the future,"Probably not. Just well, like, it depends for what but I think like, it's not super common in the industry as much as like Java or Python."
,Perspective-Racket IDE not friendly,Students think the IDE of racket is not friendly,"But like, the IDE is like a dog friendly, very hard to debug."
,Perspective-Fun for racket,Students think Racket is fun ,"Yeah, I think, um, like the beginning of rocket like recursive and tail recursive functions are fun."
Timespan,Timespan-more than one month for C++,Students spend more than one month to be familiar with the basics of C++,I'd say probably six weeks into 2201.
,Timespan- less than one month for C++,Students spend less than one month to be familiar with the basics of C++,I have to feel comfortable in two or three weeks because that's that's the point we will we dive deeper into the assignments right
,Timespan- less than one month for Racket,Students spend more than one month to be familiar with the basics of Racket,"We spent the first semester learning racket, so I would say one or two months."
,Timespan-months but faster comparatively C++,Students learn C++ through months but comparatively faster,"I think, like few months,"
,Timespan-more than one month for Racket,Students spend less than one month to be familiar with the basics of Racket,Probably two weeks
Reason,Reason-not familiar with coding when learn C++,Students learnt C++ faster because they think the are not familiar with coding at that time,"I guess because like having prior knowledge of different programming languages, you kind of know the flow of like, So that really helps with like learning about racket in general."
,Reason-Racket is harder than C++ for its syntax,Students think racket is harder than C++ for its syntax,racket is harder than C++. Because I think it's just more intuitive being able to program like with for loops and things rather than with recursion.
,Reason-walking steps by steps help learning,Students think walking through the language steps by steps helps learning,"Well, you said like, with C++ that you kind of like the second time around, took it more slowly? And like went through? more carefully, like step by step."
,Reason-class is simple for racket,Students learnt Racket faster because they think the class is simple and straightforward. ,"I would say it's been like, pretty good, maybe not great. Partly maybe just because of the that we haven't spent as much time getting to look at it"
,Reason-more difficult tasks for C++,Students think they need to do more difficult tasks for C++ than PA of Racket,I think I think we've also just done more difficult stuff with C++. Like the stuff we've done with Racket has been pretty easy.
,Reason-More experience on imperative languages,Students think they learn C++ better because they had experience of other imperative languages,"I think it's good. I had a pretty good background in Java. Heading in so I thought it was pretty similar, but it's been pretty good here."
,Reason-more resources online,Students think there are more resources online,"I think it's more, everyone uses it. So if you're like, StackOverflow, you have a problem that you're more likely to get an answer for C++ than racket"
Other Programming Language,Other Functional Programming language,"Students have experience with prolog, or other programing language",Then caml
,Other Imperative Progaming languages,"Students have experience with Java, C, etc.","Python, Java, C++."